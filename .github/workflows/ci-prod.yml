# This is a basic workflow to build and deploy to sit env

name: ci-prod

# Controls when the workflow will run
on:
  # Triggers the workflow on tag events but only for the release branch
  push:
    tags: 
    - '*'
    
  
env:
  #Set environment related variables
  VAR_ANYPOINT_ENV: Sandbox
  VAR_APPLICATION_NAME_SUFFIX: prod 
  
  # Allows you to run this workflow manually from the Actions tab
 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  build:
    # The type of runner that the job will run on
    name: Maven Build and Upload
    runs-on: ubuntu-18.04
    if: github.ref == 'refs/heads/release/**'
    environment: prod
  
    steps:
    
      #Setup Maven
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.2
        with:
          maven-version: 3.8.2
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout ${{ github.event.repository.name }}
        uses: actions/checkout@v2.4.0

     

      - name: Cache local maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      #Dependency download
      - name: Application Version
        run: |
          echo "VAR_APPLICATION_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
          
      
      # Runs a set of commands using the runners shell
      - name: Build & Package
        run: |
          mvn clean package -DskipTests -DfinalName=${{ github.event.repository.name }}-$VAR_APPLICATION_VERSION-$GITHUB_RUN_NUMBER
          
     # Runs a set of commands using the runners shell
      - name: Deploy to PROD 
        run: >
          mvn mule:deploy 
          -Dmule.artifact=./target/${{ github.event.repository.name }}-$VAR_APPLICATION_VERSION-$GITHUB_RUN_NUMBER-mule-application.jar  
          -Denv=$VAR_APPLICATION_NAME_SUFFIX 
          -Danypoint.platform.environment=$VAR_ANYPOINT_ENV 
          -Danypoint.application.env=$VAR_APPLICATION_NAME_SUFFIX 
          
          
      
     # Upload build artifact    
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          # Artifact name
          name: prod-artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: './target/*.jar'  

 
